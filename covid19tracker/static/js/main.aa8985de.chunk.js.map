{"version":3,"sources":["utils/common-functions.js","components/row.js","components/table.js","components/level.js","constants.js","components/mapexplorer.js","components/timeseries.js","components/minigraph.js","components/home.js","components/banner.js","App.js","serviceWorker.js","index.js"],"names":["formatDate","unformattedDate","day","slice","month","year","time","Row","props","useState","state","setState","districts","setDistricts","sortedDistricts","setSortedDistricts","sortColumn","localStorage","getItem","isAscending","sortData","setSortData","useEffect","handleReveal","sortDistricts","useCallback","aDistricts","sorted","Object","keys","sort","district1","district2","value1","parseInt","confirmed","value2","comparisonValue","forEach","key","handleSort","column","setItem","Fragment","className","reveal","style","display","total","onClick","onMouseEnter","onHighlightState","index","onMouseLeave","touchstart","fontWeight","color","delta","active","recovered","deaths","colSpan","isNaN","Date","parse","lastupdatedtime","formatDistance","e","title","window","innerWidth","map","district","toLowerCase","onHighlightDistrict","Unknown","Table","states","setStates","revealedStates","setRevealedStates","count","setCount","summary","reduce","a","length","filter","s","stateDistrictWiseData","currentsortColumn","currentTarget","querySelector","getAttribute","totalRow","splice","StateData1","StateData2","unshift","doSort","animationDelay","districtData","Level","data","setData","setConfirmed","setActive","recoveries","setRecoveries","setDeaths","parseData","deltas","confirmeddelta","recovereddelta","deceaseddelta","MAP_TYPES","TimeSeries","timeseries","setTimeseries","datapoint","setDatapoint","setIndex","mode","setMode","update","setUpdate","graphElement1","useRef","graphElement2","graphElement3","graphElement4","graphElement5","graphElement6","u","graphData","svg1","d3","current","svg2","svg3","svg4","svg5","svg6","margin","width","height","dateMin","setDate","getDate","dateMax","x","domain","range","indexScale","svgArray","dataTypes","colors","yScales","Array","from","_","i","d","focus","y","append","attr","mouseout","mousemove","xm","this","Math","round","invert","f","j","call","ticks","tickPadding","tickFormat","tick","floor","on","dots","selectAll","enter","datum","curve","refreshGraphs","graphs","remove","type","ref","viewBox","preserveAspectRatio","Minigraph","y1","path1","totalLength1","node","getTotalLength","transition","duration","animate","target","path2","totalLength2","path3","totalLength3","path4","totalLength4","Home","setStateDistrictWiseData","fetched","setFetched","graphOption","setGraphOption","lastUpdated","setLastUpdated","setDeltas","timeseriesMode","setTimeseriesMode","undefined","setStateHighlighted","setDistrictHighlighted","getStates","Promise","all","axios","get","response","stateDistrictWiseResponse","statewise","cases_time_series","key_values","console","log","htmlFor","aria-label","checked","onChange","event","Banner","snippets","setSnippets","snippet","setSnippet","then","factoids","catch","err","snippetChooser","min","max","random","interval","setInterval","clearInterval","banner","history","require","createBrowserHistory","App","base","render","location","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.aa8985de.chunk.js","sourcesContent":["export const formatDate = (unformattedDate) => {\r\n  const day = unformattedDate.slice(0, 2);\r\n  const month = unformattedDate.slice(3, 5);\r\n  const year = unformattedDate.slice(6, 10);\r\n  const time = unformattedDate.slice(11);\r\n  return `${year}-${month}-${day}T${time}+05:30`;\r\n};\r\n","import React, {useState, useEffect, useCallback} from 'react';\r\nimport * as Icon from 'react-feather';\r\nimport {formatDate} from '../utils/common-functions';\r\nimport {formatDistance} from 'date-fns';\r\nfunction Row(props) {\r\n  const [state, setState] = useState(props.state);\r\n  const [districts, setDistricts] = useState(props.districts);\r\n  const [sortedDistricts, setSortedDistricts] = useState(props.districts);\r\n  const [sortData, setSortData] = useState({\r\n    sortColumn: localStorage.getItem('district.sortColumn')\r\n      ? localStorage.getItem('district.sortColumn')\r\n      : 'confirmed',\r\n    isAscending: localStorage.getItem('district.isAscending')\r\n      ? localStorage.getItem('district.isAscending') === 'true'\r\n      : false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    setState(props.state);\r\n  }, [props.state]);\r\n\r\n  useEffect(() => {\r\n    setDistricts(props.districts);\r\n    setSortedDistricts(props.districts);\r\n  }, [props.districts]);\r\n\r\n  const handleReveal = () => {\r\n    props.handleReveal(props.state.state);\r\n  };\r\n\r\n  const sortDistricts = useCallback(\r\n    (aDistricts) => {\r\n      const sorted = {};\r\n      if (aDistricts) {\r\n        Object.keys(aDistricts)\r\n          .sort((district1, district2) => {\r\n            const sortColumn = sortData.sortColumn;\r\n            const value1 =\r\n              sortColumn === 'district'\r\n                ? district1\r\n                : parseInt(aDistricts[district1].confirmed);\r\n            const value2 =\r\n              sortColumn === 'district'\r\n                ? district2\r\n                : parseInt(aDistricts[district2].confirmed);\r\n            const comparisonValue =\r\n              value1 > value2\r\n                ? 1\r\n                : value1 === value2 && district1 > district2\r\n                ? 1\r\n                : -1;\r\n            return sortData.isAscending\r\n              ? comparisonValue\r\n              : comparisonValue * -1;\r\n          })\r\n          .forEach((key) => {\r\n            sorted[key] = aDistricts[key];\r\n          });\r\n        setSortedDistricts(sorted);\r\n      }\r\n    },\r\n    [sortData.isAscending, sortData.sortColumn]\r\n  );\r\n\r\n  const handleSort = (column) => {\r\n    const isAscending =\r\n      sortData.sortColumn === column\r\n        ? !sortData.isAscending\r\n        : sortData.sortColumn === 'district';\r\n    setSortData({\r\n      sortColumn: column,\r\n      isAscending: isAscending,\r\n    });\r\n    localStorage.setItem('district.sortColumn', column);\r\n    localStorage.setItem('district.isAscending', isAscending);\r\n  };\r\n\r\n  useEffect(() => {\r\n    sortDistricts(districts);\r\n  }, [districts, sortData, sortDistricts]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <span\r\n        className={`dropdown ${\r\n          props.reveal ? 'rotateRightDown' : 'rotateDownRight'\r\n        }`}\r\n        style={{display: !props.total ? '' : 'none'}}\r\n        onClick={() => {\r\n          handleReveal();\r\n        }}\r\n      >\r\n        <Icon.ChevronDown />\r\n      </span>\r\n      <tr\r\n        className={props.total ? 'state is-total' : 'state'}\r\n        onMouseEnter={() => props.onHighlightState?.(state, props.index)}\r\n        onMouseLeave={() => props.onHighlightState?.()}\r\n        touchstart={() => props.onHighlightState?.(state, props.index)}\r\n        onClick={() => {\r\n          handleReveal();\r\n        }}\r\n      >\r\n        <td style={{fontWeight: 600}}>{state.state}</td>\r\n        <td>\r\n          <span className=\"deltas\" style={{color: '#ff073a'}}>\r\n            {state.delta.confirmed > 0 && <Icon.ArrowUp />}\r\n            {state.delta.confirmed > 0 ? `${state.delta.confirmed}` : ''}\r\n          </span>\r\n          {parseInt(state.confirmed) === 0 ? '-' : state.confirmed}\r\n        </td>\r\n        <td\r\n          style={{color: parseInt(state.active) === 0 ? '#B5B5B5' : 'inherit'}}\r\n        >\r\n          {/* <span className=\"deltas\" style={{color: '#007bff'}}>\r\n            {!state.delta.active==0 && <Icon.ArrowUp/>}\r\n            {state.delta.active>0 ? `${state.delta.active}` : ''}\r\n          </span>*/}\r\n          {parseInt(state.active) === 0 ? '-' : state.active}\r\n        </td>\r\n        <td\r\n          style={{\r\n            color: parseInt(state.recovered) === 0 ? '#B5B5B5' : 'inherit',\r\n          }}\r\n        >\r\n          {/* <span className=\"deltas\" style={{color: '#28a745'}}>\r\n            {!state.delta.recovered==0 && <Icon.ArrowUp/>}\r\n            {state.delta.recovered > 0 ? `${state.delta.recovered}` : ''}\r\n          </span>*/}\r\n          {parseInt(state.recovered) === 0 ? '-' : state.recovered}\r\n        </td>\r\n        <td\r\n          style={{color: parseInt(state.deaths) === 0 ? '#B5B5B5' : 'inherit'}}\r\n        >\r\n          {/* <span className=\"deltas\" style={{color: '#6c757d'}}>\r\n            {!state.delta.deaths==0 && <Icon.ArrowUp/>}\r\n            {state.delta.deaths>0 ? `${state.delta.deaths}` : ''}\r\n          </span>*/}\r\n          {parseInt(state.deaths) === 0 ? '-' : state.deaths}\r\n        </td>\r\n      </tr>\r\n\r\n      <tr\r\n        className={'state-last-update'}\r\n        style={{display: props.reveal && !props.total ? '' : 'none'}}\r\n      >\r\n        <td colSpan={5}>\r\n          <div className=\"last-update\">\r\n            <h6>Last Updated&nbsp;</h6>\r\n            <h6>\r\n              {isNaN(Date.parse(formatDate(props.state.lastupdatedtime)))\r\n                ? ''\r\n                : `${formatDistance(\r\n                    new Date(formatDate(props.state.lastupdatedtime)),\r\n                    new Date()\r\n                  )} Ago`}\r\n            </h6>\r\n          </div>\r\n        </td>\r\n      </tr>\r\n\r\n      <tr\r\n        className={`district-heading`}\r\n        style={{display: props.reveal && !props.total ? '' : 'none'}}\r\n      >\r\n        <td onClick={(e) => handleSort('district')}>\r\n          <div className=\"heading-content\">\r\n            <abbr title=\"District\">District</abbr>\r\n            <div\r\n              style={{\r\n                display:\r\n                  sortData.sortColumn === 'district' ? 'initial' : 'none',\r\n              }}\r\n            >\r\n              {sortData.isAscending ? (\r\n                <div className=\"arrow-up\" />\r\n              ) : (\r\n                <div className=\"arrow-down\" />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </td>\r\n        <td onClick={(e) => handleSort('confirmed')}>\r\n          <div className=\"heading-content\">\r\n            <abbr\r\n              className={`${window.innerWidth <= 769 ? 'is-cherry' : ''}`}\r\n              title=\"Confirmed\"\r\n            >\r\n              {window.innerWidth <= 769\r\n                ? window.innerWidth <= 375\r\n                  ? 'C'\r\n                  : 'Cnfmd'\r\n                : 'Confirmed'}\r\n            </abbr>\r\n            <div\r\n              style={{\r\n                display:\r\n                  sortData.sortColumn === 'confirmed' ? 'initial' : 'none',\r\n              }}\r\n            >\r\n              {sortData.isAscending ? (\r\n                <div className=\"arrow-up\" />\r\n              ) : (\r\n                <div className=\"arrow-down\" />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </td>\r\n      </tr>\r\n\r\n      {sortedDistricts &&\r\n        Object.keys(sortedDistricts).map((district, index) => {\r\n          if (district.toLowerCase() !== 'unknown') {\r\n            return (\r\n              <tr\r\n                key={index}\r\n                className={`district`}\r\n                style={{display: props.reveal && !props.total ? '' : 'none'}}\r\n                onMouseEnter={() =>\r\n                  props.onHighlightDistrict?.(district, state, props.index)\r\n                }\r\n                onMouseLeave={() => props.onHighlightDistrict?.()}\r\n                touchstart={() =>\r\n                  props.onHighlightDistrict?.(district, state, props.index)\r\n                }\r\n              >\r\n                <td style={{fontWeight: 600}}>{district}</td>\r\n                <td>\r\n                  <span className=\"deltas\" style={{color: '#ff073a'}}>\r\n                    {sortedDistricts[district].delta.confirmed > 0 && (\r\n                      <Icon.ArrowUp />\r\n                    )}\r\n                    {sortedDistricts[district].delta.confirmed > 0\r\n                      ? `${sortedDistricts[district].delta.confirmed}`\r\n                      : ''}\r\n                  </span>\r\n\r\n                  {sortedDistricts[district].confirmed}\r\n                </td>\r\n              </tr>\r\n            );\r\n          }\r\n          return null;\r\n        })}\r\n\r\n      {sortedDistricts?.Unknown && (\r\n        <tr\r\n          className={`district`}\r\n          style={{display: props.reveal && !props.total ? '' : 'none'}}\r\n        >\r\n          <td style={{fontWeight: 600}}>Unknown</td>\r\n          <td>\r\n            <span className=\"deltas\" style={{color: '#ff073a'}}>\r\n              {sortedDistricts['Unknown'].delta.confirmed > 0 && (\r\n                <Icon.ArrowUp />\r\n              )}\r\n              {sortedDistricts['Unknown'].delta.confirmed > 0\r\n                ? `${sortedDistricts['Unknown'].delta.confirmed}`\r\n                : ''}\r\n            </span>\r\n            {sortedDistricts['Unknown'].confirmed}\r\n          </td>\r\n        </tr>\r\n      )}\r\n\r\n      <tr\r\n        className={`spacer`}\r\n        style={{display: props.reveal && !props.total ? '' : 'none'}}\r\n      >\r\n        <td></td>\r\n        <td></td>\r\n        <td></td>\r\n      </tr>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Row;\r\n","import React, {useState, useEffect} from 'react';\r\n\r\nimport Row from './row';\r\n\r\nfunction Table(props) {\r\n  const [states, setStates] = useState(props.states);\r\n  const [revealedStates, setRevealedStates] = useState({});\r\n  const [districts, setDistricts] = useState({});\r\n  const [count, setCount] = useState(0);\r\n  const [sortData, setSortData] = useState({\r\n    sortColumn: localStorage.getItem('state.sortColumn')\r\n      ? localStorage.getItem('state.sortColumn')\r\n      : 'confirmed',\r\n    isAscending: localStorage.getItem('state.isAscending')\r\n      ? localStorage.getItem('state.isAscending') === 'true'\r\n      : false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (props.summary === true) {\r\n      setStates(props.states.slice(0, 9));\r\n    } else {\r\n      setStates(props.states);\r\n    }\r\n  }, [props.states, props.summary]);\r\n\r\n  useEffect(() => {\r\n    if (props.states[0]) {\r\n      setRevealedStates(\r\n        props.states.reduce((a, state) => {\r\n          return {...a, [state.state]: false};\r\n        }, {})\r\n      );\r\n    }\r\n  }, [props.states]);\r\n\r\n  useEffect(() => {\r\n    if (states.length > 0) {\r\n      // slice to ignore the first item which is the total count\r\n      setCount(states.slice(1).filter((s) => s && s.confirmed > 0).length);\r\n    }\r\n  }, [states]);\r\n\r\n  useEffect(() => {\r\n    setDistricts(props.stateDistrictWiseData);\r\n  }, [props.stateDistrictWiseData]);\r\n\r\n  const doSort = (e, props) => {\r\n    const totalRow = states.splice(0, 1);\r\n    states.sort((StateData1, StateData2) => {\r\n      const sortColumn = sortData.sortColumn;\r\n      let value1 = StateData1[sortColumn];\r\n      let value2 = StateData2[sortColumn];\r\n\r\n      if (sortColumn !== 'state') {\r\n        value1 = parseInt(StateData1[sortColumn]);\r\n        value2 = parseInt(StateData2[sortColumn]);\r\n      }\r\n\r\n      if (sortData.isAscending) {\r\n        return value1 > value2\r\n          ? 1\r\n          : value1 === value2 && StateData1['state'] > StateData2['state']\r\n          ? 1\r\n          : -1;\r\n      } else {\r\n        return value1 < value2\r\n          ? 1\r\n          : value1 === value2 && StateData1['state'] > StateData2['state']\r\n          ? 1\r\n          : -1;\r\n      }\r\n    });\r\n    states.unshift(totalRow[0]);\r\n  };\r\n\r\n  const handleSort = (e, props) => {\r\n    const currentsortColumn = e.currentTarget\r\n      .querySelector('abbr')\r\n      .getAttribute('title')\r\n      .toLowerCase();\r\n    const isAscending =\r\n      sortData.sortColumn === currentsortColumn\r\n        ? !sortData.isAscending\r\n        : sortData.sortColumn === 'state';\r\n    setSortData({\r\n      sortColumn: currentsortColumn,\r\n      isAscending: isAscending,\r\n    });\r\n    localStorage.setItem('state.sortColumn', currentsortColumn);\r\n    localStorage.setItem('state.isAscending', isAscending);\r\n  };\r\n\r\n  const handleReveal = (state) => {\r\n    setRevealedStates({\r\n      ...revealedStates,\r\n      [state]: !revealedStates[state],\r\n    });\r\n  };\r\n\r\n  doSort();\r\n\r\n  return (\r\n    <>\r\n      <h5 className=\"affected-count fadeInUp\" style={{animationDelay: '1s'}}>\r\n        {count} States/UTS Affected\r\n      </h5>\r\n      <table className=\"table fadeInUp\" style={{animationDelay: '1s'}}>\r\n        <thead>\r\n          <tr>\r\n            <th\r\n              className=\"sticky state-heading\"\r\n              onClick={(e) => handleSort(e, props)}\r\n            >\r\n              <div className=\"heading-content\">\r\n                <abbr title=\"State\">State/UT</abbr>\r\n                <div\r\n                  style={{\r\n                    display:\r\n                      sortData.sortColumn === 'state' ? 'initial' : 'none',\r\n                  }}\r\n                >\r\n                  {sortData.isAscending ? (\r\n                    <div className=\"arrow-up\" />\r\n                  ) : (\r\n                    <div className=\"arrow-down\" />\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </th>\r\n            <th className=\"sticky\" onClick={(e) => handleSort(e, props)}>\r\n              <div className=\"heading-content\">\r\n                <abbr\r\n                  className={`${window.innerWidth <= 769 ? 'is-cherry' : ''}`}\r\n                  title=\"Confirmed\"\r\n                >\r\n                  {window.innerWidth <= 769\r\n                    ? window.innerWidth <= 375\r\n                      ? 'C'\r\n                      : 'Cnfmd'\r\n                    : 'Confirmed'}\r\n                </abbr>\r\n                <div\r\n                  style={{\r\n                    display:\r\n                      sortData.sortColumn === 'confirmed' ? 'initial' : 'none',\r\n                  }}\r\n                >\r\n                  {sortData.isAscending ? (\r\n                    <div className=\"arrow-up\" />\r\n                  ) : (\r\n                    <div className=\"arrow-down\" />\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </th>\r\n            <th className=\"sticky\" onClick={(e) => handleSort(e, props)}>\r\n              <div className=\"heading-content\">\r\n                <abbr\r\n                  className={`${window.innerWidth <= 769 ? 'is-blue' : ''}`}\r\n                  title=\"Active\"\r\n                >\r\n                  {window.innerWidth <= 769\r\n                    ? window.innerWidth <= 375\r\n                      ? 'A'\r\n                      : 'Actv'\r\n                    : 'Active'}\r\n                </abbr>\r\n                <div\r\n                  style={{\r\n                    display:\r\n                      sortData.sortColumn === 'active' ? 'initial' : 'none',\r\n                  }}\r\n                >\r\n                  {sortData.isAscending ? (\r\n                    <div className=\"arrow-up\" />\r\n                  ) : (\r\n                    <div className=\"arrow-down\" />\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </th>\r\n            <th className=\"sticky\" onClick={(e) => handleSort(e, props)}>\r\n              <div className=\"heading-content\">\r\n                <abbr\r\n                  className={`${window.innerWidth <= 769 ? 'is-green' : ''}`}\r\n                  title=\"Recovered\"\r\n                >\r\n                  {window.innerWidth <= 769\r\n                    ? window.innerWidth <= 375\r\n                      ? 'R'\r\n                      : 'Rcvrd'\r\n                    : 'Recovered'}\r\n                </abbr>\r\n                <div\r\n                  className={\r\n                    sortData.sortColumn === 'recovered' ? 'sort-black' : ''\r\n                  }\r\n                ></div>\r\n                <div\r\n                  style={{\r\n                    display:\r\n                      sortData.sortColumn === 'recovered' ? 'initial' : 'none',\r\n                  }}\r\n                >\r\n                  {sortData.isAscending ? (\r\n                    <div className=\"arrow-up\" />\r\n                  ) : (\r\n                    <div className=\"arrow-down\" />\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </th>\r\n            <th className=\"sticky\" onClick={(e) => handleSort(e, props)}>\r\n              <div className=\"heading-content\">\r\n                <abbr\r\n                  className={`${window.innerWidth <= 769 ? 'is-gray' : ''}`}\r\n                  title=\"Deaths\"\r\n                >\r\n                  {window.innerWidth <= 769\r\n                    ? window.innerWidth <= 375\r\n                      ? 'D'\r\n                      : 'Dcsd'\r\n                    : 'Deceased'}\r\n                </abbr>\r\n                <div\r\n                  style={{\r\n                    display:\r\n                      sortData.sortColumn === 'deaths' ? 'initial' : 'none',\r\n                  }}\r\n                >\r\n                  {sortData.isAscending ? (\r\n                    <div className=\"arrow-up\" />\r\n                  ) : (\r\n                    <div className=\"arrow-down\" />\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n\r\n        {states.map((state, index) => {\r\n          if (index !== 0 && state.confirmed > 0) {\r\n            return (\r\n              <tbody key={index}>\r\n                <Row\r\n                  key={index}\r\n                  index={index}\r\n                  state={state}\r\n                  total={false}\r\n                  reveal={revealedStates[state.state]}\r\n                  districts={\r\n                    Object.keys(districts).length - 1 > 0\r\n                      ? districts[state.state].districtData\r\n                      : []\r\n                  }\r\n                  onHighlightState={props.onHighlightState}\r\n                  onHighlightDistrict={props.onHighlightDistrict}\r\n                  handleReveal={handleReveal}\r\n                />\r\n              </tbody>\r\n            );\r\n          }\r\n          return null;\r\n        })}\r\n\r\n        <tbody>\r\n          {states.length > 1 && props.summary === false && (\r\n            <Row key={0} state={states[0]} total={true} />\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n","import React, {useState, useEffect} from 'react';\r\n\r\nfunction Level(props) {\r\n  const [data, setData] = useState(props.data);\r\n  const [confirmed, setConfirmed] = useState(0);\r\n  const [active, setActive] = useState(0);\r\n  const [recoveries, setRecoveries] = useState(0);\r\n  const [deaths, setDeaths] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setData(props.data);\r\n  }, [props.data]);\r\n\r\n  useEffect(() => {\r\n    const parseData = () => {\r\n      let confirmed = 0;\r\n      let active = 0;\r\n      let recoveries = 0;\r\n      let deaths = 0;\r\n      data.forEach((state, index) => {\r\n        if (index !== 0) {\r\n          confirmed += parseInt(state.confirmed);\r\n          active += parseInt(state.active);\r\n          recoveries += parseInt(state.recovered);\r\n          deaths += parseInt(state.deaths);\r\n        }\r\n      });\r\n      setConfirmed(confirmed);\r\n      setActive(active);\r\n      setRecoveries(recoveries);\r\n      setDeaths(deaths);\r\n    };\r\n    parseData();\r\n  }, [data]);\r\n\r\n  return (\r\n    <div className=\"Level fadeInUp\" style={{animationDelay: '0.8s'}}>\r\n      <div className=\"level-item is-cherry\">\r\n        <h5>Confirmed</h5>\r\n        <h4>\r\n          [\r\n          {props.deltas\r\n            ? props.deltas.confirmeddelta >= 0\r\n              ? '+' + props.deltas.confirmeddelta\r\n              : '+0'\r\n            : ''}\r\n          ]\r\n        </h4>\r\n        <h1>{confirmed} </h1>\r\n      </div>\r\n\r\n      <div className=\"level-item is-blue\">\r\n        <h5 className=\"heading\">Active</h5>\r\n        <h4>&nbsp;</h4>\r\n        {/* <h4>[{props.deltas ? props.deltas.confirmeddelta-(props.deltas.recovereddelta+props.deltas.deceaseddelta) >=0 ? '+'+(props.deltas.confirmeddelta-(props.deltas.recovereddelta+props.deltas.deceaseddelta)).toString() : '+0' : ''}]</h4>*/}\r\n        <h1 className=\"title has-text-info\">{active}</h1>\r\n      </div>\r\n\r\n      <div className=\"level-item is-green\">\r\n        <h5 className=\"heading\">Recovered</h5>\r\n        <h4>\r\n          [\r\n          {props.deltas\r\n            ? props.deltas.recovereddelta >= 0\r\n              ? '+' + props.deltas.recovereddelta\r\n              : '+0'\r\n            : ''}\r\n          ]\r\n        </h4>\r\n        <h1 className=\"title has-text-success\">{recoveries} </h1>\r\n      </div>\r\n\r\n      <div className=\"level-item is-gray\">\r\n        <h5 className=\"heading\">Deceased</h5>\r\n        <h4>\r\n          [\r\n          {props.deltas\r\n            ? props.deltas.deceaseddelta >= 0\r\n              ? '+' + props.deltas.deceaseddelta\r\n              : '+0'\r\n            : ''}\r\n          ]\r\n        </h4>\r\n        <h1 className=\"title has-text-grey\">{deaths}</h1>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Level;\r\n","export const MAP_TYPES = {\r\n  COUNTRY: 'country',\r\n  STATE: 'state',\r\n};\r\n\r\nexport const MAPS_DIR = '/maps';\r\n","import React, {useState, useEffect, useMemo, useCallback} from 'react';\r\nimport ChoroplethMap, {highlightRegionInMap} from './choropleth';\r\nimport {MAP_TYPES, MAPS_DIR} from '../constants';\r\nimport {formatDate} from '../utils/common-functions';\r\nimport {formatDistance} from 'date-fns';\r\n\r\nconst mapMeta = {\r\n  India: {\r\n    name: 'India',\r\n    geoDataFile: `${MAPS_DIR}/india.json`,\r\n    mapType: MAP_TYPES.COUNTRY,\r\n    graphObjectName: 'india',\r\n  },\r\n  'Andaman and Nicobar Islands': {\r\n    name: 'Andaman and Nicobar Islands',\r\n    geoDataFile: `${MAPS_DIR}/andamannicobarislands.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'andamannicobarislands_district',\r\n  },\r\n  'Arunachal Pradesh': {\r\n    name: 'Arunachal Pradesh',\r\n    geoDataFile: `${MAPS_DIR}/arunachalpradesh.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'arunachalpradesh_district',\r\n  },\r\n  'Andhra Pradesh': {\r\n    name: 'Andhra Pradesh',\r\n    geoDataFile: `${MAPS_DIR}/andhrapradesh.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'andhrapradesh_district',\r\n  },\r\n\r\n  Assam: {\r\n    name: 'Assam',\r\n    geoDataFile: `${MAPS_DIR}/assam.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'assam_district',\r\n  },\r\n  Bihar: {\r\n    name: 'Bihar',\r\n    geoDataFile: `${MAPS_DIR}/bihar.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'bihar_district',\r\n  },\r\n  Chhattisgarh: {\r\n    name: 'Chhattisgarh',\r\n    geoDataFile: `${MAPS_DIR}/chhattisgarh.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'chhattisgarh_district',\r\n  },\r\n  Delhi: {\r\n    name: 'Delhi',\r\n    geoDataFile: `${MAPS_DIR}/delhi.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'delhi_1997-2012_district',\r\n  },\r\n  Karnataka: {\r\n    name: 'Karnataka',\r\n    geoDataFile: `${MAPS_DIR}/karnataka.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'karnataka_district',\r\n  },\r\n  Kerala: {\r\n    name: 'Kerala',\r\n    geoDataFile: `${MAPS_DIR}/kerala.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'kerala_district',\r\n  },\r\n  Goa: {\r\n    name: 'Goa',\r\n    geoDataFile: `${MAPS_DIR}/goa.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'goa_district',\r\n  },\r\n  Gujarat: {\r\n    name: 'Gujarat',\r\n    geoDataFile: `${MAPS_DIR}/gujarat.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'gujarat_district_2011',\r\n  },\r\n  Haryana: {\r\n    name: 'Haryana',\r\n    geoDataFile: `${MAPS_DIR}/haryana.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'haryana_district',\r\n  },\r\n  'Himachal Pradesh': {\r\n    name: 'Himachal Pradesh',\r\n    geoDataFile: `${MAPS_DIR}/himachalpradesh.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'himachalpradesh_district',\r\n  },\r\n  'Jammu and Kashmir': {\r\n    name: 'Jammu and Kashmir',\r\n    geoDataFile: `${MAPS_DIR}/jammukashmir.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'jammukashmir_district',\r\n  },\r\n  Jharkhand: {\r\n    name: 'Jharkhand',\r\n    geoDataFile: `${MAPS_DIR}/jharkhand.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'jharkhand_district',\r\n  },\r\n  Ladakh: {\r\n    name: 'Ladakh',\r\n    geoDataFile: `${MAPS_DIR}/ladakh.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'ladakh_district',\r\n  },\r\n  'Madhya Pradesh': {\r\n    name: 'Madhya Pradesh',\r\n    geoDataFile: `${MAPS_DIR}/madhyapradesh.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'madhyapradesh_district',\r\n  },\r\n  Maharashtra: {\r\n    name: 'Maharashtra',\r\n    geoDataFile: `${MAPS_DIR}/maharashtra.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'maharashtra_district',\r\n  },\r\n  Manipur: {\r\n    name: 'Manipur',\r\n    geoDataFile: `${MAPS_DIR}/manipur.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'manipur_pre2016_districts',\r\n  },\r\n  Meghalaya: {\r\n    name: 'Meghalaya',\r\n    geoDataFile: `${MAPS_DIR}/meghalaya.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'meghalaya_district',\r\n  },\r\n  Mizoram: {\r\n    name: 'Mizoram',\r\n    geoDataFile: `${MAPS_DIR}/mizoram.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'mizoram_district',\r\n  },\r\n  Nagaland: {\r\n    name: 'Nagaland',\r\n    geoDataFile: `${MAPS_DIR}/nagaland.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'nagaland_district',\r\n  },\r\n  Odisha: {\r\n    name: 'Odisha',\r\n    geoDataFile: `${MAPS_DIR}/odisha.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'odisha_district',\r\n  },\r\n  Punjab: {\r\n    name: 'Punjab',\r\n    geoDataFile: `${MAPS_DIR}/punjab.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'punjab_district',\r\n  },\r\n  Rajasthan: {\r\n    name: 'Rajasthan',\r\n    geoDataFile: `${MAPS_DIR}/rajasthan.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'rajasthan_district',\r\n  },\r\n  Sikkim: {\r\n    name: 'Sikkim',\r\n    geoDataFile: `${MAPS_DIR}/sikkim.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'sikkim_district',\r\n  },\r\n  'Tamil Nadu': {\r\n    name: 'Tamil Nadu',\r\n    geoDataFile: `${MAPS_DIR}/tamil-nadu.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'tamilnadu_district',\r\n  },\r\n  Telangana: {\r\n    name: 'Telangana',\r\n    geoDataFile: `${MAPS_DIR}/telugana.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'telugana',\r\n  },\r\n  Tripura: {\r\n    name: 'Tripura',\r\n    geoDataFile: `${MAPS_DIR}/tripura.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'tripura_district',\r\n  },\r\n  Uttarakhand: {\r\n    name: 'Uttarakhand',\r\n    geoDataFile: `${MAPS_DIR}/uttarakhand.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'uttarakhand_district',\r\n  },\r\n  'Uttar Pradesh': {\r\n    name: 'Uttar Pradesh',\r\n    geoDataFile: `${MAPS_DIR}/uttarpradesh.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'uttarpradesh_district',\r\n  },\r\n\r\n  'West Bengal': {\r\n    name: 'West Bengal',\r\n    geoDataFile: `${MAPS_DIR}/westbengal.json`,\r\n    mapType: MAP_TYPES.STATE,\r\n    graphObjectName: 'westbengal_district',\r\n  },\r\n};\r\n\r\nexport default function ({\r\n  states,\r\n  stateDistrictWiseData,\r\n  stateHighlighted,\r\n  districtHighlighted,\r\n}) {\r\n  const [selectedRegion, setSelectedRegion] = useState({});\r\n  const [currentHoveredRegion, setCurrentHoveredRegion] = useState({});\r\n  const [currentMap, setCurrentMap] = useState(mapMeta.India);\r\n\r\n  useEffect(() => {\r\n    // setStates(props.states);\r\n    // setCurrentHoveredRegion()\r\n  }, [states]);\r\n\r\n  useEffect(() => {\r\n    const region = getRegionFromState(states[1]);\r\n    setCurrentHoveredRegion(region);\r\n  }, [states]);\r\n\r\n  useEffect(() => {\r\n    if (stateHighlighted === null) {\r\n      highlightRegionInMap(null, currentMap.mapType);\r\n    } else {\r\n      if (stateHighlighted !== undefined) {\r\n        const newMap = mapMeta['India'];\r\n        setCurrentMap(newMap);\r\n        const regionHighlighted = getRegionFromState(stateHighlighted.state);\r\n        setCurrentHoveredRegion(regionHighlighted);\r\n        highlightRegionInMap(regionHighlighted.name, currentMap.mapType);\r\n        setSelectedRegion(regionHighlighted.name);\r\n      }\r\n    }\r\n  }, [stateHighlighted, currentMap.mapType]);\r\n\r\n  if (!currentHoveredRegion) {\r\n    return null;\r\n  }\r\n\r\n  const [statistic, currentMapData] = useMemo(() => {\r\n    const statistic = {total: 0, maxConfirmed: 0};\r\n    let currentMapData = {};\r\n\r\n    if (currentMap.mapType === MAP_TYPES.COUNTRY) {\r\n      currentMapData = states.reduce((acc, state) => {\r\n        if (state.state === 'Total') {\r\n          return acc;\r\n        }\r\n        const confirmed = parseInt(state.confirmed);\r\n        statistic.total += confirmed;\r\n        if (confirmed > statistic.maxConfirmed) {\r\n          statistic.maxConfirmed = confirmed;\r\n        }\r\n\r\n        acc[state.state] = state.confirmed;\r\n        return acc;\r\n      }, {});\r\n    } else if (currentMap.mapType === MAP_TYPES.STATE) {\r\n      const districtWiseData = (\r\n        stateDistrictWiseData[currentMap.name] || {districtData: {}}\r\n      ).districtData;\r\n      currentMapData = Object.keys(districtWiseData).reduce((acc, district) => {\r\n        const confirmed = parseInt(districtWiseData[district].confirmed);\r\n        statistic.total += confirmed;\r\n        if (confirmed > statistic.maxConfirmed) {\r\n          statistic.maxConfirmed = confirmed;\r\n        }\r\n        acc[district] = districtWiseData[district].confirmed;\r\n        return acc;\r\n      }, {});\r\n    }\r\n    return [statistic, currentMapData];\r\n  }, [currentMap, states, stateDistrictWiseData]);\r\n\r\n  const setHoveredRegion = useCallback(\r\n    (name, currentMap) => {\r\n      if (currentMap.mapType === MAP_TYPES.COUNTRY) {\r\n        setCurrentHoveredRegion(\r\n          getRegionFromState(states.filter((state) => name === state.state)[0])\r\n        );\r\n      } else if (currentMap.mapType === MAP_TYPES.STATE) {\r\n        const state = stateDistrictWiseData[currentMap.name] || {\r\n          districtData: {},\r\n        };\r\n        let districtData = state.districtData[name];\r\n        if (!districtData) {\r\n          districtData = {\r\n            confirmed: 0,\r\n            active: 0,\r\n            deaths: 0,\r\n            recovered: 0,\r\n          };\r\n        }\r\n        setCurrentHoveredRegion(getRegionFromDistrict(districtData, name));\r\n      }\r\n    },\r\n    [stateDistrictWiseData, states]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (districtHighlighted === null) {\r\n      highlightRegionInMap(null, currentMap.mapType);\r\n      return;\r\n    }\r\n    const newMap = mapMeta[districtHighlighted?.state.state];\r\n    if (!newMap) {\r\n      return;\r\n    }\r\n    setCurrentMap(newMap);\r\n    setHoveredRegion(districtHighlighted?.district, newMap);\r\n    highlightRegionInMap(districtHighlighted?.district, currentMap.mapType);\r\n    setSelectedRegion(districtHighlighted?.district);\r\n  }, [districtHighlighted, currentMap.mapType, setHoveredRegion]);\r\n\r\n  const getRegionFromDistrict = (districtData, name) => {\r\n    if (!districtData) {\r\n      return;\r\n    }\r\n    const region = {...districtData};\r\n    if (!region.name) {\r\n      region.name = name;\r\n    }\r\n    return region;\r\n  };\r\n\r\n  const getRegionFromState = (state) => {\r\n    if (!state) {\r\n      return;\r\n    }\r\n    const region = {...state};\r\n    if (!region.name) {\r\n      region.name = region.state;\r\n    }\r\n    return region;\r\n  };\r\n\r\n  const switchMapToState = useCallback(\r\n    (name) => {\r\n      const newMap = mapMeta[name];\r\n      if (!newMap) {\r\n        return;\r\n      }\r\n      setCurrentMap(newMap);\r\n      if (newMap.mapType === MAP_TYPES.COUNTRY) {\r\n        setHoveredRegion(states[1].state, newMap);\r\n      } else if (newMap.mapType === MAP_TYPES.STATE) {\r\n        const districtData = (stateDistrictWiseData[name] || {districtData: {}})\r\n          .districtData;\r\n        const topDistrict = Object.keys(districtData)\r\n          .filter((name) => name !== 'Unknown')\r\n          .sort((a, b) => {\r\n            return districtData[b].confirmed - districtData[a].confirmed;\r\n          })[0];\r\n        setHoveredRegion(topDistrict, newMap);\r\n      }\r\n    },\r\n    [setHoveredRegion, stateDistrictWiseData, states]\r\n  );\r\n  const {name, lastupdatedtime} = currentHoveredRegion;\r\n\r\n  return (\r\n    <div className=\"MapExplorer fadeInUp\" style={{animationDelay: '1.2s'}}>\r\n      <div className=\"header\">\r\n        <h1>{currentMap.name} Map</h1>\r\n        <h6>\r\n          Hover over a{' '}\r\n          {currentMap.mapType === MAP_TYPES.COUNTRY ? 'state' : 'district'} for\r\n          more details\r\n        </h6>\r\n      </div>\r\n\r\n      <div className=\"map-stats\">\r\n        <div className=\"stats\">\r\n          <h5>Confirmed</h5>\r\n          <div className=\"stats-bottom\">\r\n            <h1>{currentHoveredRegion.confirmed}</h1>\r\n            <h6>{}</h6>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"stats is-blue\">\r\n          <h5>Active</h5>\r\n          <div className=\"stats-bottom\">\r\n            <h1>{currentHoveredRegion.active || ''}</h1>\r\n            <h6>{}</h6>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"stats is-green\">\r\n          <h5>Recovered</h5>\r\n          <div className=\"stats-bottom\">\r\n            <h1>{currentHoveredRegion.recovered || ''}</h1>\r\n            <h6>{}</h6>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"stats is-gray\">\r\n          <h5>Deceased</h5>\r\n          <div className=\"stats-bottom\">\r\n            <h1>{currentHoveredRegion.deaths || ''}</h1>\r\n            <h6>{}</h6>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"meta\">\r\n        <h2>{name}</h2>\r\n        {lastupdatedtime && (\r\n          <div\r\n            className={`last-update ${\r\n              currentMap.mapType === MAP_TYPES.STATE\r\n                ? 'district-last-update'\r\n                : 'state-last-update'\r\n            }`}\r\n          >\r\n            <h6>Last Updated</h6>\r\n            <h3>\r\n              {isNaN(Date.parse(formatDate(lastupdatedtime)))\r\n                ? ''\r\n                : formatDistance(\r\n                    new Date(formatDate(lastupdatedtime)),\r\n                    new Date()\r\n                  ) + ' Ago'}\r\n            </h3>\r\n          </div>\r\n        )}\r\n\r\n        {currentMap.mapType === MAP_TYPES.STATE &&\r\n        currentMapData.Unknown > 0 ? (\r\n          <h4 className=\"unknown\">\r\n            Districts unknown for {currentMapData.Unknown} people\r\n          </h4>\r\n        ) : null}\r\n\r\n        {currentMap.mapType === MAP_TYPES.STATE ? (\r\n          <div\r\n            className=\"button back-button\"\r\n            onClick={() => switchMapToState('India')}\r\n          >\r\n            Back\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n\r\n      <ChoroplethMap\r\n        statistic={statistic}\r\n        mapMeta={currentMap}\r\n        mapData={currentMapData}\r\n        setHoveredRegion={setHoveredRegion}\r\n        changeMap={switchMapToState}\r\n        selectedRegion={selectedRegion}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, {useState, useEffect, useRef, useCallback} from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nfunction TimeSeries(props) {\r\n  const [timeseries, setTimeseries] = useState([]);\r\n  const [datapoint, setDatapoint] = useState({});\r\n  const [index, setIndex] = useState(10);\r\n  const [mode, setMode] = useState(props.mode);\r\n  const [update, setUpdate] = useState(-1);\r\n\r\n  const graphElement1 = useRef(null);\r\n  const graphElement2 = useRef(null);\r\n  const graphElement3 = useRef(null);\r\n  const graphElement4 = useRef(null);\r\n  const graphElement5 = useRef(null);\r\n  const graphElement6 = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (props.timeseries.length > 1) {\r\n      setTimeseries(props.timeseries);\r\n    }\r\n  }, [props.timeseries]);\r\n\r\n  useEffect(() => {\r\n    setMode(props.mode);\r\n    setUpdate((u) => u + 1);\r\n  }, [props.mode]);\r\n\r\n  const graphData = useCallback(\r\n    (timeseries) => {\r\n      const data = timeseries;\r\n      setDatapoint(timeseries[timeseries.length - 1]);\r\n      setIndex(timeseries.length - 1);\r\n\r\n      const svg1 = d3.select(graphElement1.current);\r\n      const svg2 = d3.select(graphElement2.current);\r\n      const svg3 = d3.select(graphElement3.current);\r\n      const svg4 = d3.select(graphElement4.current);\r\n      const svg5 = d3.select(graphElement5.current);\r\n      const svg6 = d3.select(graphElement6.current);\r\n\r\n      // Margins\r\n      const margin = {top: 0, right: 20, bottom: 50, left: 20};\r\n      const width = 650 - margin.left - margin.right;\r\n      const height = 200 - margin.top - margin.bottom;\r\n\r\n      const dateMin = new Date(data[0]['date'] + '2020');\r\n      dateMin.setDate(dateMin.getDate() - 1);\r\n      const dateMax = new Date(data[timeseries.length - 1]['date'] + '2020');\r\n      dateMax.setDate(dateMax.getDate() + 1);\r\n\r\n      const x = d3\r\n        .scaleTime()\r\n        .domain([dateMin, dateMax])\r\n        .range([margin.left, width]);\r\n\r\n      const indexScale = d3\r\n        .scaleLinear()\r\n        .domain([0, timeseries.length])\r\n        .range([margin.left, width]);\r\n\r\n      // Arrays of objects\r\n      const svgArray = [svg1, svg2, svg3, svg4, svg5, svg6];\r\n      const dataTypes = [\r\n        'totalconfirmed',\r\n        'totalrecovered',\r\n        'totaldeceased',\r\n        'dailyconfirmed',\r\n        'dailyrecovered',\r\n        'dailydeceased',\r\n      ];\r\n      const colors = [\r\n        '#ff073a',\r\n        '#28a745',\r\n        '#6c757d',\r\n        '#ff073a',\r\n        '#28a745',\r\n        '#6c757d',\r\n      ];\r\n      const maxDataTypes = Array.from({length: svgArray.length}, (_, i) => {\r\n        return d3.max(data, (d) => {\r\n          return +d[dataTypes[i]];\r\n        });\r\n      });\r\n      const yScales = maxDataTypes.map((d) => {\r\n        return d3\r\n          .scaleLinear()\r\n          .domain([-d / 10, d])\r\n          .range([height, margin.top]);\r\n      });\r\n\r\n      /* Focus dots */\r\n      const focus = svgArray.map((d, i) => {\r\n        const y = mode ? yScales[0] : yScales[i];\r\n        return d\r\n          .append('g')\r\n          .append('circle')\r\n          .attr('fill', colors[i])\r\n          .attr('stroke', colors[i])\r\n          .attr('r', 5)\r\n          .attr('cx', x(new Date(data[timeseries.length - 1]['date'] + '2020')))\r\n          .attr('cy', y(data[timeseries.length - 1][dataTypes[i]]));\r\n      });\r\n\r\n      function mouseout() {\r\n        setDatapoint(data[timeseries.length - 1]);\r\n        setIndex(timeseries.length - 1);\r\n        focus.forEach((d, i) => {\r\n          const y = mode ? yScales[0] : yScales[i];\r\n          d.attr(\r\n            'cx',\r\n            x(new Date(data[timeseries.length - 1]['date'] + '2020'))\r\n          ).attr('cy', y(data[timeseries.length - 1][dataTypes[i]]));\r\n        });\r\n      }\r\n\r\n      function mousemove() {\r\n        const xm = d3.mouse(this)[0];\r\n        const i = Math.round(indexScale.invert(xm));\r\n        if (0 <= i && i < timeseries.length) {\r\n          const d = data[i];\r\n          setDatapoint(d);\r\n          setIndex(i);\r\n          focus.forEach((f, j) => {\r\n            const y = mode ? yScales[0] : yScales[j];\r\n            f.attr('cx', x(new Date(d['date'] + '2020'))).attr(\r\n              'cy',\r\n              y(d[dataTypes[j]])\r\n            );\r\n          });\r\n        }\r\n      }\r\n\r\n      /* Begin drawing charts */\r\n      svgArray.forEach((s, i) => {\r\n        /* X axis */\r\n        s.append('g')\r\n          .attr('transform', 'translate(0,' + height + ')')\r\n          .attr('class', 'axis')\r\n          .call(d3.axisBottom(x));\r\n\r\n        /* Y axis */\r\n        s.append('g')\r\n          .attr('transform', `translate(${width}, ${0})`)\r\n          .attr('class', 'axis')\r\n          .call(\r\n            d3\r\n              .axisRight(mode ? yScales[0] : yScales[i])\r\n              .ticks(5)\r\n              .tickPadding(5)\r\n              .tickFormat((tick) => {\r\n                if (Math.floor(tick) === tick) return tick;\r\n              })\r\n          );\r\n\r\n        /* Focus dots */\r\n        s.on('mousemove', mousemove)\r\n          .on('touchmove', mousemove)\r\n          .on('mouseout', mouseout)\r\n          .on('touchend', mouseout);\r\n\r\n        /* Path dots */\r\n        const dots = s\r\n          .selectAll('.dot')\r\n          .data(data)\r\n          .enter()\r\n          .append('circle')\r\n          .attr('fill', colors[i])\r\n          .attr('stroke', colors[i])\r\n          .attr('cursor', 'pointer')\r\n          .attr('cx', (d) => {\r\n            return x(new Date(d['date'] + '2020'));\r\n          })\r\n          .attr('cy', (d) => {\r\n            if (mode) return yScales[0](d[dataTypes[i]]);\r\n            return yScales[i](d[dataTypes[i]]);\r\n          });\r\n\r\n        /* Paths */\r\n        if (i < Math.floor(svgArray.length / 2)) {\r\n          s.append('path')\r\n            .datum(data)\r\n            .attr('fill', 'none')\r\n            .attr('stroke', colors[i] + '99')\r\n            .attr('stroke-width', 5)\r\n            .attr('cursor', 'pointer')\r\n            .attr(\r\n              'd',\r\n              d3\r\n                .line()\r\n                .x((d) => {\r\n                  return x(new Date(d['date'] + '2020'));\r\n                })\r\n                .y((d) => {\r\n                  if (mode) return yScales[0](d[dataTypes[i]]);\r\n                  return yScales[i](d[dataTypes[i]]);\r\n                })\r\n                .curve(d3.curveCardinal)\r\n            );\r\n          dots.attr('r', 3);\r\n        } else {\r\n          s.selectAll('stem-line')\r\n            .data(data)\r\n            .enter()\r\n            .append('line')\r\n            .attr('x1', (d) => {\r\n              return x(new Date(d['date'] + '2020'));\r\n            })\r\n            .attr('y1', height)\r\n            .attr('x2', (d) => {\r\n              return x(new Date(d['date'] + '2020'));\r\n            })\r\n            .attr('y2', (d) => {\r\n              return mode\r\n                ? yScales[0](d[dataTypes[i]])\r\n                : yScales[i](d[dataTypes[i]]);\r\n            })\r\n            .style('stroke', colors[i] + '99')\r\n            .style('stroke-width', 4);\r\n          dots.attr('r', 2);\r\n        }\r\n      });\r\n    },\r\n    [mode]\r\n  );\r\n\r\n  const refreshGraphs = useCallback(() => {\r\n    const graphs = [\r\n      graphElement1,\r\n      graphElement2,\r\n      graphElement3,\r\n      graphElement4,\r\n      graphElement5,\r\n      graphElement6,\r\n    ];\r\n    for (let i = 0; i <= graphs.length; i++) {\r\n      if (i === graphs.length) {\r\n        graphData(timeseries);\r\n        return;\r\n      } else d3.select(graphs[i].current).selectAll('*').remove();\r\n    }\r\n  }, [timeseries, graphData]);\r\n\r\n  useEffect(() => {\r\n    if (update > 0) {\r\n      refreshGraphs();\r\n    }\r\n  }, [update, refreshGraphs]);\r\n\r\n  useEffect(() => {\r\n    if (timeseries.length > 1) {\r\n      graphData(timeseries);\r\n    }\r\n  }, [timeseries, graphData]);\r\n\r\n  return (\r\n    <div\r\n      className=\"TimeSeries-Parent fadeInUp\"\r\n      style={{animationDelay: '1.7s'}}\r\n    >\r\n      <div\r\n        className=\"timeseries\"\r\n        style={{display: props.type === 1 ? 'flex' : 'none'}}\r\n      >\r\n        <div className=\"svg-parent\">\r\n          <div className=\"stats\">\r\n            <h5>Confirmed {datapoint['date']}</h5>\r\n            <div className=\"stats-bottom\">\r\n              <h2>{datapoint['totalconfirmed']}</h2>\r\n              <h6>\r\n                {timeseries.length > 0 && index !== 0\r\n                  ? timeseries[index]['totalconfirmed'] -\r\n                      timeseries[index - 1]['totalconfirmed'] >=\r\n                    0\r\n                    ? '+' +\r\n                      (timeseries[index]['totalconfirmed'] -\r\n                        timeseries[index - 1]['totalconfirmed'])\r\n                    : timeseries[index]['totalconfirmed'] -\r\n                      timeseries[index - 1]['totalconfirmed']\r\n                  : ''}\r\n              </h6>\r\n            </div>\r\n          </div>\r\n          <svg\r\n            ref={graphElement1}\r\n            width=\"650\"\r\n            height=\"200\"\r\n            viewBox=\"0 0 650 200\"\r\n            preserveAspectRatio=\"xMidYMid meet\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"svg-parent is-green\">\r\n          <div className=\"stats is-green\">\r\n            <h5>Recovered {datapoint['date']}</h5>\r\n            <div className=\"stats-bottom\">\r\n              <h2>{datapoint['totalrecovered']}</h2>\r\n              <h6>\r\n                {timeseries.length > 0 && index !== 0\r\n                  ? timeseries[index]['totalrecovered'] -\r\n                      timeseries[index - 1]['totalrecovered'] >=\r\n                    0\r\n                    ? '+' +\r\n                      (timeseries[index]['totalrecovered'] -\r\n                        timeseries[index - 1]['totalrecovered'])\r\n                    : timeseries[index]['totalrecovered'] -\r\n                      timeseries[index - 1]['totalrecovered']\r\n                  : ''}\r\n              </h6>\r\n            </div>\r\n          </div>\r\n          <svg\r\n            ref={graphElement2}\r\n            width=\"650\"\r\n            height=\"200\"\r\n            viewBox=\"0 0 650 200\"\r\n            preserveAspectRatio=\"xMidYMid meet\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"svg-parent is-gray\">\r\n          <div className=\"stats is-gray\">\r\n            <h5>\r\n              Deceased <br />\r\n              {datapoint['date']}\r\n            </h5>\r\n            <div className=\"stats-bottom\">\r\n              <h2>{datapoint['totaldeceased']}</h2>\r\n              <h6>\r\n                {timeseries.length > 0 && index !== 0\r\n                  ? timeseries[index]['totaldeceased'] -\r\n                      timeseries[index - 1]['totaldeceased'] >=\r\n                    0\r\n                    ? '+' +\r\n                      (timeseries[index]['totaldeceased'] -\r\n                        timeseries[index - 1]['totaldeceased'])\r\n                    : timeseries[index]['totaldeceased'] -\r\n                      timeseries[index - 1]['totaldeceased']\r\n                  : ''}\r\n              </h6>\r\n            </div>\r\n          </div>\r\n          <svg\r\n            ref={graphElement3}\r\n            width=\"650\"\r\n            height=\"200\"\r\n            viewBox=\"0 0 650 200\"\r\n            preserveAspectRatio=\"xMidYMid meet\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        className=\"timeseries\"\r\n        style={{display: props.type === 2 ? 'flex' : 'none'}}\r\n      >\r\n        <div className=\"svg-parent\">\r\n          <div className=\"stats\">\r\n            <h5>Confirmed {datapoint['date']}</h5>\r\n            <div className=\"stats-bottom\">\r\n              <h2>{datapoint['dailyconfirmed']}</h2>\r\n              <h6>\r\n                {timeseries.length > 0 && index !== 0\r\n                  ? timeseries[index]['dailyconfirmed'] -\r\n                      timeseries[index - 1]['dailyconfirmed'] >=\r\n                    0\r\n                    ? '+' +\r\n                      (timeseries[index]['dailyconfirmed'] -\r\n                        timeseries[index - 1]['dailyconfirmed'])\r\n                    : timeseries[index]['dailyconfirmed'] -\r\n                      timeseries[index - 1]['dailyconfirmed']\r\n                  : ''}\r\n              </h6>\r\n            </div>\r\n          </div>\r\n          <svg\r\n            ref={graphElement4}\r\n            width=\"650\"\r\n            height=\"200\"\r\n            viewBox=\"0 0 650 200\"\r\n            preserveAspectRatio=\"xMidYMid meet\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"svg-parent is-green\">\r\n          <div className=\"stats is-green\">\r\n            <h5>Recovered {datapoint['date']}</h5>\r\n            <div className=\"stats-bottom\">\r\n              <h2>{datapoint['dailyrecovered']}</h2>\r\n              <h6>\r\n                {timeseries.length > 0 && index !== 0\r\n                  ? timeseries[index]['dailyrecovered'] -\r\n                      timeseries[index - 1]['dailyrecovered'] >=\r\n                    0\r\n                    ? '+' +\r\n                      (timeseries[index]['dailyrecovered'] -\r\n                        timeseries[index - 1]['dailyrecovered'])\r\n                    : timeseries[index]['dailyrecovered'] -\r\n                      timeseries[index - 1]['dailyrecovered']\r\n                  : ''}\r\n              </h6>\r\n            </div>\r\n          </div>\r\n          <svg\r\n            ref={graphElement5}\r\n            width=\"650\"\r\n            height=\"200\"\r\n            viewBox=\"0 0 650 200\"\r\n            preserveAspectRatio=\"xMidYMid meet\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"svg-parent is-gray\">\r\n          <div className=\"stats is-gray\">\r\n            <h5>\r\n              Deceased <br />\r\n              {datapoint['date']}\r\n            </h5>\r\n            <div className=\"stats-bottom\">\r\n              <h2>{datapoint['dailydeceased']}</h2>\r\n              <h6>\r\n                {timeseries.length > 0 && index !== 0\r\n                  ? timeseries[index]['dailydeceased'] -\r\n                      timeseries[index - 1]['dailydeceased'] >=\r\n                    0\r\n                    ? '+' +\r\n                      (timeseries[index]['dailydeceased'] -\r\n                        timeseries[index - 1]['dailydeceased'])\r\n                    : timeseries[index]['dailydeceased'] -\r\n                      timeseries[index - 1]['dailydeceased']\r\n                  : ''}\r\n              </h6>\r\n            </div>\r\n          </div>\r\n          <svg\r\n            ref={graphElement6}\r\n            width=\"650\"\r\n            height=\"200\"\r\n            viewBox=\"0 0 650 200\"\r\n            preserveAspectRatio=\"xMidYMid meet\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TimeSeries;\r\n","import React, {useState, useEffect, useRef, useCallback} from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nfunction Minigraph(props) {\r\n  const [timeseries, setTimeseries] = useState([]);\r\n  const graphElement1 = useRef(null);\r\n  const graphElement2 = useRef(null);\r\n  const graphElement3 = useRef(null);\r\n  const graphElement4 = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (props.timeseries.length > 1) {\r\n      setTimeseries(props.timeseries.slice(props.timeseries.length - 20));\r\n    }\r\n  }, [props.timeseries]);\r\n\r\n  const graphData = useCallback(\r\n    (timeseries) => {\r\n      if (timeseries.length <= 1) return 0;\r\n      const data = timeseries;\r\n      const svg1 = d3.select(graphElement1.current);\r\n      const margin = {top: 30, right: 5, bottom: 30, left: 0};\r\n      const width = 100 - margin.left - margin.right;\r\n      const height = 100 - margin.top - margin.bottom;\r\n\r\n      const svg2 = d3.select(graphElement2.current);\r\n      const svg3 = d3.select(graphElement3.current);\r\n      const svg4 = d3.select(graphElement4.current);\r\n\r\n      const x = d3\r\n        .scaleTime()\r\n        .domain(\r\n          d3.extent(data, function (d) {\r\n            return new Date(d['date'] + '2020');\r\n          })\r\n        )\r\n        .range([0, width]);\r\n\r\n      const y1 = d3\r\n        .scaleLinear()\r\n        .domain([\r\n          0,\r\n          d3.max(data, function (d) {\r\n            return +d['dailyconfirmed'];\r\n          }),\r\n        ])\r\n        .range([height, 0]);\r\n\r\n      const path1 = svg1\r\n        .append('path')\r\n        .datum(data)\r\n        .attr('fill', 'none')\r\n        .attr('stroke', '#ff073a99')\r\n        .attr('stroke-width', 3)\r\n        .attr('cursor', 'pointer')\r\n        .attr(\r\n          'd',\r\n          d3\r\n            .line()\r\n            .x(function (d) {\r\n              return x(new Date(d['date'] + '2020'));\r\n            })\r\n            .y(function (d, i) {\r\n              return y1(d['dailyconfirmed']);\r\n            })\r\n            .curve(d3.curveCardinal)\r\n        );\r\n\r\n      const totalLength1 = path1.node().getTotalLength();\r\n      path1\r\n        .attr('stroke-dasharray', totalLength1 + ' ' + totalLength1)\r\n        .attr('stroke-dashoffset', totalLength1)\r\n        .transition()\r\n        .duration(props.animate ? 2000 : 0)\r\n        .attr('stroke-dashoffset', 0);\r\n\r\n      svg1\r\n        .selectAll('.dot')\r\n        .data(data.slice(data.length - 1))\r\n        .enter()\r\n        .append('circle')\r\n        .attr('fill', '#ff073a')\r\n        .attr('stroke', '#ff073a')\r\n        .attr('r', 2)\r\n        .attr('cursor', 'pointer')\r\n        .attr('cx', function (d) {\r\n          return x(new Date(d['date'] + '2020'));\r\n        })\r\n        .attr('cy', function (d) {\r\n          return y1(d['dailyconfirmed']);\r\n        })\r\n        .on('mouseover', (d) => {\r\n          d3.select(d3.event.target).attr('r', '5');\r\n        })\r\n        .on('mouseout', (d) => {\r\n          d3.select(d3.event.target).attr('r', '2');\r\n        })\r\n        .style('opacity', 0)\r\n        .transition()\r\n        .duration(props.animate ? 3000 : 0)\r\n        .style('opacity', 1);\r\n\r\n      const path2 = svg2\r\n        .append('path')\r\n        .datum(data)\r\n        .attr('fill', 'none')\r\n        .attr('cursor', 'pointer')\r\n        .attr('stroke', '#007bff99')\r\n        .attr('stroke-width', 3)\r\n        .attr('cursor', 'pointer')\r\n        .attr('cursor', 'pointer')\r\n        .attr(\r\n          'd',\r\n          d3\r\n            .line()\r\n            .x(function (d) {\r\n              return x(new Date(d['date'] + '2020'));\r\n            })\r\n            .y(function (d, i) {\r\n              if (i === 0) {\r\n                return y1(\r\n                  d['dailyconfirmed'] - d['dailyrecovered'] - d['dailydeceased']\r\n                );\r\n              } else {\r\n                return y1(\r\n                  d['dailyconfirmed'] - d['dailyrecovered'] - d['dailydeceased']\r\n                );\r\n              }\r\n            })\r\n            .curve(d3.curveCardinal)\r\n        );\r\n\r\n      const totalLength2 = path2.node().getTotalLength();\r\n      path2\r\n        .attr('stroke-dasharray', totalLength2 + ' ' + totalLength2)\r\n        .attr('stroke-dashoffset', totalLength2)\r\n        .transition()\r\n        .duration(props.animate ? 2000 : 0)\r\n        .attr('stroke-dashoffset', 0);\r\n\r\n      svg2\r\n        .selectAll('.dot')\r\n        .data(data.slice(data.length - 1))\r\n        .enter()\r\n        .append('circle')\r\n        .attr('fill', '#007bff')\r\n        .attr('stroke', '#007bff')\r\n        .attr('r', 2)\r\n        .attr('cursor', 'pointer')\r\n        .attr('cx', function (d) {\r\n          return x(new Date(d['date'] + '2020'));\r\n        })\r\n        .attr('cy', function (d) {\r\n          /* const today =\r\n          data[data.length - 1]['dailyconfirmed'] -\r\n          data[data.length - 1]['dailyrecovered'] -\r\n          data[data.length - 1]['dailydeceased'];\r\n        const yesterday =\r\n          data[data.length - 2]['dailyconfirmed'] -\r\n          data[data.length - 2]['dailyrecovered'] -\r\n          data[data.length - 2]['dailydeceased'];*/\r\n          return y1(\r\n            d['dailyconfirmed'] - d['dailyrecovered'] - d['dailydeceased']\r\n          );\r\n        })\r\n        .on('mouseover', (d) => {\r\n          d3.select(d3.event.target).attr('r', '5');\r\n        })\r\n        .on('mouseout', (d) => {\r\n          d3.select(d3.event.target).attr('r', '2');\r\n        })\r\n        .style('opacity', 0)\r\n        .transition()\r\n        .duration(props.animate ? 3000 : 0)\r\n        .style('opacity', 1);\r\n\r\n      const path3 = svg3\r\n        .append('path')\r\n        .datum(data)\r\n        .attr('fill', 'none')\r\n        .attr('stroke', '#28a74599')\r\n        .attr('stroke-width', 3)\r\n        .attr('cursor', 'pointer')\r\n        .attr(\r\n          'd',\r\n          d3\r\n            .line()\r\n            .x(function (d) {\r\n              return x(new Date(d['date'] + '2020'));\r\n            })\r\n            .y(function (d, i) {\r\n              if (i === 0) {\r\n                return y1(d['dailyrecovered']);\r\n              } else {\r\n                return y1(d['dailyrecovered']);\r\n              }\r\n            })\r\n            .curve(d3.curveCardinal)\r\n        );\r\n\r\n      const totalLength3 = path1.node().getTotalLength();\r\n      path3\r\n        .attr('stroke-dasharray', totalLength3 + ' ' + totalLength3)\r\n        .attr('stroke-dashoffset', totalLength3)\r\n        .transition()\r\n        .duration(props.animate ? 2000 : 0)\r\n        .attr('stroke-dashoffset', 0);\r\n\r\n      svg3\r\n        .selectAll('.dot')\r\n        .data(data.slice(data.length - 1))\r\n        .enter()\r\n        .append('circle')\r\n        .attr('fill', '#28a745')\r\n        .attr('stroke', '#28a745')\r\n        .attr('r', 2)\r\n        .attr('cursor', 'pointer')\r\n        .attr('cx', function (d) {\r\n          return x(new Date(d['date'] + '2020'));\r\n        })\r\n        .attr('cy', function (d) {\r\n          return y1(d['dailyrecovered']);\r\n        })\r\n        .on('mouseover', (d) => {\r\n          d3.select(d3.event.target).attr('r', '5');\r\n        })\r\n        .on('mouseout', (d) => {\r\n          d3.select(d3.event.target).attr('r', '2');\r\n        })\r\n        .style('opacity', 0)\r\n        .transition()\r\n        .duration(props.animate ? 3000 : 0)\r\n        .style('opacity', 1);\r\n\r\n      const path4 = svg4\r\n        .append('path')\r\n        .datum(data)\r\n        .attr('fill', 'none')\r\n        .attr('cursor', 'pointer')\r\n        .attr('stroke', '#6c757d99')\r\n        .attr('stroke-width', 3)\r\n        .attr('cursor', 'pointer')\r\n        .attr('cursor', 'pointer')\r\n        .attr(\r\n          'd',\r\n          d3\r\n            .line()\r\n            .x(function (d) {\r\n              return x(new Date(d['date'] + '2020'));\r\n            })\r\n            .y(function (d, i) {\r\n              if (i === 0) {\r\n                return y1(d['dailydeceased']);\r\n              } else {\r\n                return y1(d['dailydeceased']);\r\n              }\r\n            })\r\n            .curve(d3.curveCardinal)\r\n        );\r\n\r\n      const totalLength4 = path4.node().getTotalLength();\r\n      path4\r\n        .attr('stroke-dasharray', totalLength4 + ' ' + totalLength4)\r\n        .attr('stroke-dashoffset', totalLength4)\r\n        .transition()\r\n        .duration(props.animate ? 2000 : 0)\r\n        .attr('stroke-dashoffset', 0);\r\n\r\n      svg4\r\n        .selectAll('.dot')\r\n        .data(data.slice(data.length - 1))\r\n        .enter()\r\n        .append('circle')\r\n        .attr('fill', '#6c757d')\r\n        .attr('stroke', '#6c757d')\r\n        .attr('r', 2)\r\n        .attr('cursor', 'pointer')\r\n        .attr('cx', function (d) {\r\n          return x(new Date(d['date'] + '2020'));\r\n        })\r\n        .attr('cy', function (d) {\r\n          return y1(d['dailydeceased']);\r\n        })\r\n        .on('mouseover', (d) => {\r\n          d3.select(d3.event.target).attr('r', '5');\r\n        })\r\n        .on('mouseout', (d) => {\r\n          d3.select(d3.event.target).attr('r', '2');\r\n        })\r\n        .style('opacity', 0)\r\n        .transition()\r\n        .duration(props.animate ? 3000 : 0)\r\n        .style('opacity', 1);\r\n    },\r\n    [props.animate]\r\n  );\r\n\r\n  useEffect(() => {\r\n    graphData(timeseries);\r\n  }, [timeseries, graphData]);\r\n\r\n  return (\r\n    <div className=\"Minigraph\">\r\n      <div className=\"svg-parent fadeInUp\" style={{animationDelay: '0.6s'}}>\r\n        <svg\r\n          ref={graphElement1}\r\n          width=\"100\"\r\n          height=\"100\"\r\n          viewBox=\"0 0 100 100\"\r\n          preserveAspectRatio=\"xMidYMid meet\"\r\n        />\r\n      </div>\r\n\r\n      <div\r\n        className=\"svg-parent is-blue fadeInUp\"\r\n        style={{animationDelay: '0.7s'}}\r\n      >\r\n        <svg\r\n          ref={graphElement2}\r\n          width=\"100\"\r\n          height=\"100\"\r\n          viewBox=\"0 0 100 100\"\r\n          preserveAspectRatio=\"xMidYMid meet\"\r\n        />\r\n      </div>\r\n\r\n      <div\r\n        className=\"svg-parent is-green fadeInUp\"\r\n        style={{animationDelay: '0.8s'}}\r\n      >\r\n        <svg\r\n          ref={graphElement3}\r\n          width=\"100\"\r\n          height=\"100\"\r\n          viewBox=\"0 0 100 100\"\r\n          preserveAspectRatio=\"xMidYMid meet\"\r\n        />\r\n      </div>\r\n\r\n      <div\r\n        className=\"svg-parent is-gray fadeInUp\"\r\n        style={{animationDelay: '0.9s'}}\r\n      >\r\n        <svg\r\n          ref={graphElement4}\r\n          width=\"100\"\r\n          height=\"100\"\r\n          viewBox=\"0 0 100 100\"\r\n          preserveAspectRatio=\"xMidYMid meet\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Minigraph;\r\n","import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport {formatDistance} from 'date-fns';\r\nimport {formatDate} from '../utils/common-functions';\r\nimport Table from './table';\r\nimport Level from './level';\r\nimport MapExplorer from './mapexplorer';\r\nimport TimeSeries from './timeseries';\r\nimport Minigraph from './minigraph';\r\n\r\nfunction Home(props) {\r\n  const [states, setStates] = useState([]);\r\n  const [stateDistrictWiseData, setStateDistrictWiseData] = useState({});\r\n  const [fetched, setFetched] = useState(false);\r\n  const [graphOption, setGraphOption] = useState(1);\r\n  const [lastUpdated, setLastUpdated] = useState('');\r\n  const [timeseries, setTimeseries] = useState([]);\r\n  const [deltas, setDeltas] = useState([]);\r\n  const [timeseriesMode, setTimeseriesMode] = useState(true);\r\n  const [stateHighlighted, setStateHighlighted] = useState(undefined);\r\n  const [districtHighlighted, setDistrictHighlighted] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    if (fetched === false) {\r\n      getStates();\r\n    }\r\n  }, [fetched]);\r\n\r\n  const getStates = async () => {\r\n    try {\r\n      const [response, stateDistrictWiseResponse] = await Promise.all([\r\n        axios.get('https://api.covid19india.org/data.json'),\r\n        axios.get('https://api.covid19india.org/state_district_wise.json'),\r\n      ]);\r\n      setStates(response.data.statewise);\r\n      setTimeseries(response.data.cases_time_series);\r\n      setLastUpdated(response.data.statewise[0].lastupdatedtime);\r\n      setDeltas(response.data.key_values[0]);\r\n      setStateDistrictWiseData(stateDistrictWiseResponse.data);\r\n      setFetched(true);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const onHighlightState = (state, index) => {\r\n    if (!state && !index) setStateHighlighted(null);\r\n    else setStateHighlighted({state, index});\r\n  };\r\n  const onHighlightDistrict = (district, state, index) => {\r\n    if (!state && !index && !district) setDistrictHighlighted(null);\r\n    else setDistrictHighlighted({district, state, index});\r\n  };\r\n\r\n  return (\r\n    <div className=\"Home\">\r\n      <div className=\"home-left\">\r\n        <div className=\"header fadeInUp\" style={{animationDelay: '0.5s'}}>\r\n          <div className=\"header-mid\">\r\n            <div className=\"titles\">\r\n              <h1>India COVID-19 Tracker</h1>\r\n            </div>\r\n            <div className=\"last-update\">\r\n              <h6>Last Updated</h6>\r\n              <h3>\r\n                {isNaN(Date.parse(formatDate(lastUpdated)))\r\n                  ? ''\r\n                  : formatDistance(\r\n                      new Date(formatDate(lastUpdated)),\r\n                      new Date()\r\n                    ) + ' Ago'}\r\n              </h3>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <Level data={states} deltas={deltas} />\r\n        <Minigraph timeseries={timeseries} animate={true} />\r\n\r\n        <Table\r\n          states={states}\r\n          summary={false}\r\n          onHighlightState={onHighlightState}\r\n          stateDistrictWiseData={stateDistrictWiseData}\r\n          onHighlightDistrict={onHighlightDistrict}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"home-right\">\r\n        {fetched && (\r\n          <React.Fragment>\r\n\r\n            <div\r\n              className=\"timeseries-header fadeInUp\"\r\n              style={{animationDelay: '1.5s'}}\r\n            >\r\n              <h1>Spread Trends</h1>\r\n              <div className=\"tabs\">\r\n                <div\r\n                  className={`tab ${graphOption === 1 ? 'focused' : ''}`}\r\n                  onClick={() => {\r\n                    setGraphOption(1);\r\n                  }}\r\n                >\r\n                  <h4>Cumulative</h4>\r\n                </div>\r\n                <div\r\n                  className={`tab ${graphOption === 2 ? 'focused' : ''}`}\r\n                  onClick={() => {\r\n                    setGraphOption(2);\r\n                  }}\r\n                >\r\n                  <h4>Daily</h4>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"timeseries-mode\">\r\n                <label htmlFor=\"timeseries-mode\">Scale Uniformly</label>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"switch\"\r\n                  aria-label=\"Checked by default to scale uniformly.\"\r\n                  checked={timeseriesMode}\r\n                  onChange={(event) => {\r\n                    setTimeseriesMode(!timeseriesMode);\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <TimeSeries\r\n              timeseries={timeseries}\r\n              type={graphOption}\r\n              mode={timeseriesMode}\r\n            />\r\n          </React.Fragment>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, {useState, useEffect, useCallback} from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Banner(props) {\r\n  const [snippets, setSnippets] = useState([]);\r\n  const [snippet, setSnippet] = useState();\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get('https://api.covid19india.org/website_data.json')\r\n      .then((response) => {\r\n        setSnippets(response.data.factoids || []);\r\n        setSnippet(response.data.factoids[0] || '');\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const snippetChooser = useCallback(\r\n    (min, max) => {\r\n      const index = Math.random() * (max - min) + min;\r\n      setSnippet(snippets[Math.floor(index)]);\r\n    },\r\n    [snippets]\r\n  );\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      snippetChooser(0, snippets.length - 1);\r\n    }, 10000);\r\n    return () => clearInterval(interval);\r\n  }, [snippetChooser, snippets]);\r\n\r\n  return (\r\n    <div\r\n      onClick={() => snippetChooser(0, snippets.length - 1)}\r\n      className=\"Banner fadeInUp\"\r\n      style={{animationDelay: '0.2s'}}\r\n    >\r\n      <div className=\"snippet\">{snippet ? snippet.banner : ''} &nbsp;</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from 'react-router-dom';\r\nimport * as Icon from 'react-feather';\r\n\r\nimport './App.scss';\r\nimport Home from './components/home';\r\nimport Navbar from './components/navbar';\r\nimport Links from './components/links';\r\nimport Cluster from './components/cluster';\r\nimport FAQ from './components/faq';\r\nimport Banner from './components/banner';\r\n\r\nconst history = require('history').createBrowserHistory;\r\n\r\nconst public_url = \"https://www.icarusinnovations.co/covid19tracker\"\r\n\r\nfunction App() {\r\n  // Add a new page simply by adding a new entry in this array.\r\n  const pages = [\r\n    {\r\n      pageLink: '/covid19tracker',\r\n      view: Home,\r\n      displayName: 'Home',\r\n      animationDelayForNavbar: 0.2,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router base=\"https://icarusinnovations.co/covid19tracker/\" history={history}>\r\n        <Route\r\n          render={(location) => (\r\n            <div className=\"Almighty-Router\">\r\n              <Banner />\r\n              <Home />\r\n            </div>\r\n          )}\r\n        />\r\n      </Router>\r\n      <footer className=\"fadeInUp\" style={{animationDelay: '2s'}}>\r\n        <h5>We stand with everyone fighting on the frontlines</h5>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: {'Service-Worker': 'script'},\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}